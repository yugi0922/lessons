<svg width="800" height="750" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <linearGradient id="coroutineGrad" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#7F52FF;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#C711E1;stop-opacity:1" />
    </linearGradient>
    <marker id="lifecycleArrow" markerWidth="10" markerHeight="10" refX="8" refY="3" orient="auto" fill="#7F52FF">
      <polygon points="0 0, 10 3, 0 6" />
    </marker>
    <marker id="suspendArrow" markerWidth="10" markerHeight="10" refX="8" refY="3" orient="auto" fill="#FF9800">
      <polygon points="0 0, 10 3, 0 6" />
    </marker>
  </defs>

  <!-- Title -->
  <text x="400" y="30" font-family="Arial, sans-serif" font-size="24" font-weight="bold" text-anchor="middle" fill="#333">
    コルーチンのライフサイクル
  </text>

  <!-- State: New -->
  <g transform="translate(50, 70)">
    <rect x="0" y="0" width="200" height="80" rx="10" fill="#E3F2FD" stroke="#2196F3" stroke-width="2"/>
    <text x="100" y="30" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle" fill="#1565C0">
      1. 作成 (New)
    </text>
    <text x="100" y="55" font-family="monospace" font-size="11" text-anchor="middle" fill="#333">
      launch { ... }
    </text>
  </g>

  <!-- Arrow to Active -->
  <path d="M 150 150 L 150 210" stroke="#7F52FF" stroke-width="2" marker-end="url(#lifecycleArrow)"/>
  <text x="170" y="185" font-family="Arial, sans-serif" font-size="12" fill="#7F52FF">開始</text>

  <!-- State: Active -->
  <g transform="translate(50, 210)">
    <rect x="0" y="0" width="200" height="80" rx="10" fill="#E8F5E9" stroke="#4CAF50" stroke-width="2"/>
    <text x="100" y="30" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle" fill="#2E7D32">
      2. 実行中 (Active)
    </text>
    <text x="100" y="55" font-family="monospace" font-size="11" text-anchor="middle" fill="#333">
      処理を実行中
    </text>
  </g>

  <!-- Arrow to Suspended -->
  <path d="M 250 250 L 350 250" stroke="#FF9800" stroke-width="2" marker-end="url(#suspendArrow)"/>
  <text x="270" y="240" font-family="Arial, sans-serif" font-size="12" fill="#FF9800">suspend関数</text>

  <!-- State: Suspended -->
  <g transform="translate(350, 210)">
    <rect x="0" y="0" width="200" height="80" rx="10" fill="#FFF3E0" stroke="#FF9800" stroke-width="2"/>
    <text x="100" y="30" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle" fill="#E65100">
      3. 中断 (Suspended)
    </text>
    <text x="100" y="55" font-family="monospace" font-size="11" text-anchor="middle" fill="#333">
      一時停止
    </text>
  </g>

  <!-- Arrow back to Active -->
  <path d="M 450 210 Q 450 180, 250 180 Q 150 180, 150 210" stroke="#FF9800" stroke-width="2" marker-end="url(#suspendArrow)" fill="none"/>
  <text x="300" y="170" font-family="Arial, sans-serif" font-size="12" fill="#FF9800">再開</text>

  <!-- Arrow to Completed -->
  <path d="M 150 290 L 150 350" stroke="#7F52FF" stroke-width="2" marker-end="url(#lifecycleArrow)"/>
  <text x="170" y="325" font-family="Arial, sans-serif" font-size="12" fill="#7F52FF">完了</text>

  <!-- State: Completed -->
  <g transform="translate(50, 350)">
    <rect x="0" y="0" width="200" height="80" rx="10" fill="#F3E5F5" stroke="#9C27B0" stroke-width="2"/>
    <text x="100" y="30" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle" fill="#6A1B9A">
      4. 完了 (Completed)
    </text>
    <text x="100" y="55" font-family="monospace" font-size="11" text-anchor="middle" fill="#333">
      正常終了
    </text>
  </g>

  <!-- State: Cancelled -->
  <g transform="translate(350, 350)">
    <rect x="0" y="0" width="200" height="80" rx="10" fill="#FFEBEE" stroke="#F44336" stroke-width="2"/>
    <text x="100" y="30" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle" fill="#C62828">
      キャンセル (Cancelled)
    </text>
    <text x="100" y="55" font-family="monospace" font-size="11" text-anchor="middle" fill="#333">
      job.cancel()
    </text>
  </g>

  <!-- Arrow from Active to Cancelled -->
  <path d="M 250 250 Q 300 300, 350 390" stroke="#F44336" stroke-width="2" stroke-dasharray="5,5" marker-end="url(#lifecycleArrow)"/>

  <!-- Code Example -->
  <g transform="translate(50, 470)">
    <rect x="0" y="0" width="700" height="250" rx="10" fill="#F9F9FF" stroke="#7F52FF" stroke-width="2"/>
    <text x="350" y="25" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle" fill="#7F52FF">
      実装例
    </text>
    <rect x="20" y="40" width="660" height="195" rx="5" fill="#F5F5F5"/>
    <text x="30" y="60" font-family="monospace" font-size="12" fill="#333">import kotlinx.coroutines.*</text>
    <text x="30" y="80" font-family="monospace" font-size="12" fill="#333"> </text>
    <text x="30" y="100" font-family="monospace" font-size="12" fill="#333">fun main() = runBlocking {</text>
    <text x="30" y="120" font-family="monospace" font-size="12" fill="#4CAF50">  val job = launch {                    </text>
    <text x="330" y="120" font-family="monospace" font-size="12" fill="#666">// 1. 作成</text>
    <text x="30" y="140" font-family="monospace" font-size="12" fill="#666">    println("開始")                       </text>
    <text x="330" y="140" font-family="monospace" font-size="12" fill="#666">// 2. 実行中</text>
    <text x="30" y="160" font-family="monospace" font-size="12" fill="#FF9800">    delay(1000)                           </text>
    <text x="330" y="160" font-family="monospace" font-size="12" fill="#666">// 3. 中断</text>
    <text x="30" y="180" font-family="monospace" font-size="12" fill="#666">    println("完了")                       </text>
    <text x="330" y="180" font-family="monospace" font-size="12" fill="#666">// 4. 完了</text>
    <text x="30" y="200" font-family="monospace" font-size="12" fill="#333">  }</text>
    <text x="30" y="220" font-family="monospace" font-size="12" fill="#333">  // job.cancel()  // キャンセルする場合</text>
    <text x="30" y="240" font-family="monospace" font-size="12" fill="#333">}</text>
  </g>

  <!-- Key Concepts -->
  <g transform="translate(590, 70)">
    <rect x="0" y="0" width="180" height="360" rx="10" fill="#FFF9C4" stroke="#FBC02D" stroke-width="2"/>
    <text x="90" y="25" font-family="Arial, sans-serif" font-size="14" font-weight="bold" text-anchor="middle" fill="#F57F17">
      重要ポイント
    </text>

    <g transform="translate(15, 40)">
      <text x="0" y="0" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#333">
        suspend関数
      </text>
      <text x="0" y="18" font-family="Arial, sans-serif" font-size="10" fill="#666">
        • delay()
      </text>
      <text x="0" y="33" font-family="Arial, sans-serif" font-size="10" fill="#666">
        • withContext()
      </text>
      <text x="0" y="48" font-family="Arial, sans-serif" font-size="10" fill="#666">
        • async/await
      </text>

      <text x="0" y="73" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#333">
        ビルダー
      </text>
      <text x="0" y="91" font-family="Arial, sans-serif" font-size="10" fill="#666">
        • launch - Fire and forget
      </text>
      <text x="0" y="106" font-family="Arial, sans-serif" font-size="10" fill="#666">
        • async - 結果を返す
      </text>
      <text x="0" y="121" font-family="Arial, sans-serif" font-size="10" fill="#666">
        • runBlocking - ブロック
      </text>

      <text x="0" y="146" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#333">
        スコープ
      </text>
      <text x="0" y="164" font-family="Arial, sans-serif" font-size="10" fill="#666">
        • GlobalScope
      </text>
      <text x="0" y="179" font-family="Arial, sans-serif" font-size="10" fill="#666">
        • CoroutineScope
      </text>
      <text x="0" y="194" font-family="Arial, sans-serif" font-size="10" fill="#666">
        • lifecycleScope (Android)
      </text>

      <text x="0" y="219" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#333">
        ディスパッチャ
      </text>
      <text x="0" y="237" font-family="Arial, sans-serif" font-size="10" fill="#666">
        • Dispatchers.Main
      </text>
      <text x="0" y="252" font-family="Arial, sans-serif" font-size="10" fill="#666">
        • Dispatchers.IO
      </text>
      <text x="0" y="267" font-family="Arial, sans-serif" font-size="10" fill="#666">
        • Dispatchers.Default
      </text>
      <text x="0" y="282" font-family="Arial, sans-serif" font-size="10" fill="#666">
        • Dispatchers.Unconfined
      </text>

      <text x="0" y="307" font-family="Arial, sans-serif" font-size="11" font-weight="bold" fill="#4CAF50">
        メリット
      </text>
      <text x="0" y="322" font-family="Arial, sans-serif" font-size="10" fill="#666">
        ✓ 軽量なスレッド
      </text>
      <text x="0" y="337" font-family="Arial, sans-serif" font-size="10" fill="#666">
        ✓ 構造化された並行性
      </text>
    </g>
  </g>
</svg>